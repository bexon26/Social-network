{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/My posts/MyPosts.module.css","components/Profile/My posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/My posts/Post/Post.jsx","components/Profile/My posts/MyPosts.jsx","components/Profile/My posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","styles","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","classes","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriprionBlock","photoProfile","src","photos","large","userPhoto","target","files","length","initialValues","formData","then","Post","item","alt","message","like","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","MyPosts","memo","postsElements","posts","reverse","p","id","likesCount","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.99efd9a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to='/login' />\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n   return ConnectedAuthRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriprionBlock\":\"ProfileInfo_descriprionBlock__2FQv6\",\"photoProfile\":\"ProfileInfo_photoProfile__3ZAPn\",\"contact\":\"ProfileInfo_contact__sH5BU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__eXC-r\",\"postsBlock\":\"MyPosts_postsBlock__2d0iC\",\"textBlock\":\"MyPosts_textBlock__2Jork\",\"addPost__button\":\"MyPosts_addPost__button__1Pt2w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__12-tN\"};","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n\r\n   useEffect(()=> {\r\n      setStatus(props.status)\r\n   },[props.status])\r\n   \r\n   const activateEditMode = () => {\r\n      setEditMode(true);\r\n   }\r\n\r\n   const deactivateEditeMode = () => {\r\n      setEditMode(false);\r\n      props.updateStatus(status);\r\n   }\r\n\r\n   const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value);\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         {!editMode &&\r\n            <div>\r\n               <b>Status: </b> <span onDoubleClick={activateEditMode}  >{props.status || \"----\"} yo</span>\r\n            </div>\r\n         }\r\n         {editMode &&\r\n            <div>\r\n               <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditeMode} \r\n               value={status}/>\r\n            </div>\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { reduxForm } from 'redux-form';\r\nimport classes from './ProfileInfo.module.css';\r\nimport styles from \"./../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n   return <form onSubmit={handleSubmit}>\r\n      <div><button >save</button></div>\r\n      {error && <div className={styles.formSummaryError}>\r\n         {error}\r\n      </div>}\r\n\r\n      <div>\r\n         <b>Full name</b>  {createField(\"Full name\", \"fullName\", [], Input)}\r\n      </div>\r\n      <div>\r\n         <b>Loking for a job:</b>  {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n      </div>\r\n\r\n      <div>\r\n         <b>My professionL skills</b>\r\n         {createField(\"My professionL skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n\r\n      </div>\r\n\r\n      <div>\r\n         <b>About me</b>\r\n         {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n\r\n      </div>\r\n      <div>\r\n         <b>Contacts</b>   {Object.keys(profile.contacts).map(key => {\r\n\r\n            return <div key={key} className={classes.contact}>\r\n               <b>{key}: {createField(key, \"contacts.\" + key, [], Input)} </b>\r\n            </div>\r\n         })}\r\n      </div>\r\n\r\n\r\n   </form>;\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(ProfileDataForm);\r\nexport default ProfileDataFormReduxForm;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport { userPhoto } from '../../Users/User';\r\nimport { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <div className={classes.descriprionBlock}>\r\n                <img className={classes.photoProfile} src={profile.photos.large || userPhoto} />\r\n                {isOwner && <input type={\"file\"} onChange={mainPhotoSelected} />}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => { setEditMode(true) }} />}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        <div>\r\n            <b>Full name</b>  {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Loking for a job:</b>  {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professionL skills</b>   {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>   {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>   {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={classes.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n\r\n        <div className={classes.item}>\r\n            <img src='https://amp.thenational.ae/image/policy:1.172937:1499300331/image/jpeg.jpg?f=16x9&w=1200&$p$f$w=dfa40e8' alt='avatar'></img>\r\n            {props.message}\r\n            <div>\r\n                <span>liked {props.like} </span>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Post;","import React, { PureComponent } from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../../components/common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className=\"\">\r\n                <Field name=\"newPostText\" component={Textarea} placeholder=\"Post message\"\r\n                    validate={[required, maxLength10]} />\r\n            </div>\r\n            <div className=\"\">\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm)\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post key={p.id} message={p.message} like={p.likesCount} />);\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = values => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return <div className={classes.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n        <div className='posts'>\r\n            {postsElements}\r\n        </div>\r\n    </div>;\r\n});\r\n\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './My posts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto} \r\n            isOwner={props.isOwner} \r\n            profile = {props.profile} \r\n            status={props.status} \r\n            saveProfile={props.saveProfile}\r\n            updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>)\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n       \r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.refreshProfile();\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        // if (!this.props.isAuth) return <Redirect to='/login' />\r\n        return (\r\n            <Profile {...this.props} \r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}
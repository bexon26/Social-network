{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/My posts/MyPosts.module.css","components/Profile/My posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/My posts/Post/Post.jsx","components/Profile/My posts/MyPosts.jsx","components/Profile/My posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","classes","descriprionBlock","src","photos","large","Preloader","Post","item","alt","message","like","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","memo","postsElements","posts","reverse","map","p","likesCount","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.a27d6272.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to='/login' />\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n   return ConnectedAuthRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriprionBlock\":\"ProfileInfo_descriprionBlock__2FQv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__eXC-r\",\"postsBlock\":\"MyPosts_postsBlock__2d0iC\",\"textBlock\":\"MyPosts_textBlock__2Jork\",\"addPost__button\":\"MyPosts_addPost__button__1Pt2w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__12-tN\"};","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n\r\n   useEffect(()=> {\r\n      setStatus(props.status)\r\n   },[props.status])\r\n   \r\n   const activateEditMode = () => {\r\n      setEditMode(true);\r\n   }\r\n\r\n   const deactivateEditeMode = () => {\r\n      setEditMode(false);\r\n      props.updateStatus(status);\r\n   }\r\n\r\n   const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value);\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         {!editMode &&\r\n            <div>\r\n               <span onDoubleClick={activateEditMode}  >{props.status || \"----\"} yo</span>\r\n            </div>\r\n         }\r\n         {editMode &&\r\n            <div>\r\n               <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditeMode} \r\n               value={status}/>\r\n            </div>\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from'./ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if(!profile ){\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div >\r\n            {/* <div>\r\n                <img src='https://amp.thenational.ae/image/policy:1.172937:1499300331/image/jpeg.jpg?f=16x9&w=1200&$p$f$w=dfa40e8' alt='breach' />\r\n            </div> */}\r\n            <div className={classes.descriprionBlock}>\r\n                <img src={profile.photos.large} />\r\n                {/* <ProfileStatus status={props.status} updateStatus={props.updateStatus}/> */}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n            \r\n        </div>)\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n\r\n        <div className={classes.item}>\r\n            <img src='https://amp.thenational.ae/image/policy:1.172937:1499300331/image/jpeg.jpg?f=16x9&w=1200&$p$f$w=dfa40e8' alt='avatar'></img>\r\n            {props.message}\r\n            <div>\r\n                <span>liked {props.like} </span>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Post;","import React, { PureComponent } from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../../components/common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className=\"\">\r\n                <Field name=\"newPostText\" component={Textarea} placeholder=\"Post message\"\r\n                    validate={[required, maxLength10]} />\r\n            </div>\r\n            <div className=\"\">\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm)\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} like={p.likesCount} />);\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = values => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return <div className={classes.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n        <div className='posts'>\r\n            {postsElements}\r\n        </div>\r\n    </div>;\r\n});\r\n\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './My posts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile = {props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>)\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        // if (!this.props.isAuth) return <Redirect to='/login' />\r\n        return (\r\n            <Profile {...this.props} \r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}
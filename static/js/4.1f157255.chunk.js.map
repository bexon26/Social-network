{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/WithAuthRedirect.js","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","className","classes","dialog","active","id","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","DialogsItem","key","messagesElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,uICI1IC,EAA6B,SAACC,GAAD,MAAY,CAC1CC,OAAQD,EAAME,KAAKD,SAGTE,EAAmB,SAACC,GAAe,IAEvCC,EAFsC,uKAItC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAJN,GAEZC,IAAML,WAUtC,OAFqCM,YAAQX,EAARW,CAAoCL,K,+FCP7DM,EARI,SAACJ,GAChB,OACI,yBAAKK,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC3C,kBAAC,IAAD,CAASP,GAAI,YAAcD,EAAMS,IAAKT,EAAMU,QCQzCC,EAZC,SAACX,GAEb,OAEI,6BACI,yBAAKK,UAAWC,IAAQM,SAAUZ,EAAMY,W,yCCF9CC,EAAcC,YAAiB,IAiBtBC,cAAW,CAACC,KAAM,2BAAlBD,EAfQ,SAACf,GACpB,OACI,0BAAMiB,SAAYjB,EAAMkB,cACpB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAClBC,SAAU,CAACC,IAAUV,GACrBH,KAAK,iBAAiBc,YAAY,wBAEtC,6BACI,6CCwBDC,EAhCC,SAACzB,GACb,IAAIP,EAAQO,EAAM0B,YAEdC,EAAkBlC,EAAMmC,QACvBC,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAD,CAAcrB,KAAMoB,EAAEpB,KAAMsB,IAAKF,EAAErB,GAAIA,GAAIqB,EAAErB,QACvDwB,EAAmBxC,EAAMyC,SACxBL,KAAI,SAAAM,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAE1B,GAAIA,GAAI0B,EAAE1B,QACvChB,EAAM2C,eAO3B,OAAKpC,EAAMN,OAGP,yBAAKW,UAAWC,IAAQsB,SACpB,yBAAKvB,UAAWC,IAAQ+B,cACnBV,GAEL,yBAAKtB,UAAWC,IAAQ4B,UACnBD,GAGL,kBAAC,EAAD,CAAgBhB,SAfJ,SAACqB,GACjBtC,EAAMuC,YAAYD,EAAOF,oBAGH,kBAAC,IAAD,CAAUnC,GAAI,Y,wBCF7BuC,sBACXrC,aAfkB,SAACV,GACnB,MAAO,CACHiC,YAAajC,EAAMiC,gBAIF,SAACe,GACtB,MAAO,CACHF,YAAa,SAACH,GACVK,EAASC,YAAmBN,SAOpCxC,IAFW4C,CAGbf","file":"static/js/4.1f157255.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2a4RR\",\"dialogsItems\":\"Dialogs_dialogsItems__2LYnA\",\"active\":\"Dialogs_active__1TM59\",\"messages\":\"Dialogs_messages__3eUz-\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to='/login' />\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n   return ConnectedAuthRedirectComponent;\r\n}\r\n","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className={classes.message}>{props.message}</div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} \r\n                validate={[required, maxLength50]}\r\n                name=\"newMessageBody\" placeholder='Enter your message'/>               \r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm ({form: \"dialog-add-message-form\"})(AddMessageForm)","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogsItems from './DialogsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n//import { reduxForm, Field } from \"redux-form\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(d => <DialogsItems name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages\r\n        .map(m => <Message message={m.message} key={m.id} id={m.id} />)\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}